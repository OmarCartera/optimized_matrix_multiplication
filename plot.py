import numpy as np 
import matplotlib.pyplot as plt 

plt.style.use('seaborn-talk')

x = range(0, 504, 4)

diff = []

un_float = [0.0000020, 0.0000050, 0.0000210, 0.0000640, 0.0001480, 0.0002840, 0.0004870, 0.0007710, 0.0011760, 0.0016300, 0.0022560, 0.0024950, 0.0024510, 0.0030680, 0.0038330, 0.0047350, 0.0056990, 0.0068790, 0.0080990, 0.0095310, 0.0111000, 0.0128390, 0.0147600, 0.0168550, 0.0191510, 0.0216380, 0.0243320, 0.0272540, 0.0303920, 0.0337470, 0.0373690, 0.0412120, 0.0463630, 0.0497250, 0.0543630, 0.0592980, 0.0646870, 0.0701190, 0.0759290, 0.0821440, 0.0886720, 0.0953180, 0.1024280, 0.1100970, 0.1179090, 0.1259900, 0.1347850, 0.1435550, 0.1583810, 0.1626660, 0.1735050, 0.1833550, 0.1946320, 0.2060230, 0.2180580, 0.2300210, 0.2515210, 0.2566390, 0.2699570, 0.2838830, 0.2991510, 0.3139660, 0.3295920, 0.3458590, 0.3760340, 0.3800330, 0.3976670, 0.4164200, 0.4353420, 0.4546350, 0.4752060, 0.4955570, 0.5357330, 0.5414840, 0.5617750, 0.5846520, 0.6081390, 0.6345930, 0.6592110, 0.6857050, 0.7355910, 0.7398000, 0.7679550, 0.7966800, 0.8248700, 0.8654760, 0.8894750, 0.9212210, 0.9801040, 0.9927750, 1.0197770, 1.0614470, 1.0934840, 1.1390460, 1.1689360, 1.2137940, 1.2742470, 1.2986220, 1.3420020, 1.3872980, 1.4412490, 1.4760710, 1.5151540, 1.5696830, 1.6239970, 1.6624250, 1.7127320, 1.7696790, 1.8212320, 1.8690390, 1.9155900, 1.9729430, 2.0336060, 2.0852270, 2.1371980, 2.2030450, 2.2618640, 2.3178580, 2.3758250, 2.4420500, 2.5048720, 2.5692710, 2.6332260, 2.6975280, 2.7669470, 2.8321920]
op_float = [0.0000020, 0.0000030, 0.0000090, 0.0000240, 0.0000510, 0.0000950, 0.0001580, 0.0002460, 0.0003610, 0.0005290, 0.0003700, 0.0004870, 0.0006290, 0.0008050, 0.0010030, 0.0012330, 0.0014830, 0.0017780, 0.0020980, 0.0024610, 0.0029080, 0.0033160, 0.0038040, 0.0043430, 0.0049200, 0.0055590, 0.0062440, 0.0069850, 0.0077790, 0.0086360, 0.0095920, 0.0105390, 0.0116660, 0.0126840, 0.0138710, 0.0151910, 0.0164450, 0.0178350, 0.0193000, 0.0208580, 0.0224980, 0.0242730, 0.0260210, 0.0279100, 0.0299890, 0.0319660, 0.0342000, 0.0364460, 0.0388220, 0.0412820, 0.0437850, 0.0464420, 0.0492910, 0.0521100, 0.0551550, 0.0583350, 0.0614090, 0.0648200, 0.0682280, 0.0718170, 0.0754340, 0.0793100, 0.0833440, 0.0874250, 0.0916120, 0.0958970, 0.1003620, 0.1049520, 0.1103820, 0.1146650, 0.1197110, 0.1248210, 0.1301410, 0.1356360, 0.1413240, 0.1469720, 0.1528950, 0.1591370, 0.1659780, 0.1717630, 0.1783930, 0.1850170, 0.1920190, 0.1993490, 0.2063590, 0.2137000, 0.2215120, 0.2295470, 0.2370860, 0.2452380, 0.2536430, 0.2634650, 0.2709070, 0.2798990, 0.2889640, 0.2985650, 0.3076720, 0.3186140, 0.3276740, 0.3382020, 0.3495170, 0.3595380, 0.3690100, 0.3799120, 0.3912000, 0.4025110, 0.4150400, 0.4286580, 0.4404280, 0.4515680, 0.4649690, 0.4793460, 0.4920510, 0.5046690, 0.5196450, 0.5340380, 0.5472300, 0.5618370, 0.5780430, 0.5922080, 0.6080870, 0.6227980, 0.6397800, 0.6548600, 0.6722870, 0.6880040]

#####################

un_double = [0.0000030, 0.0000140, 0.0000590, 0.0001810, 0.0004220, 0.0008130, 0.0014350, 0.0021530, 0.0007170, 0.0010190, 0.0014090, 0.0018550, 0.0024050, 0.0030540, 0.0038220, 0.0047030, 0.0058890, 0.0068520, 0.0081340, 0.0095740, 0.0111470, 0.0128810, 0.0148200, 0.0169420, 0.0193710, 0.0217380, 0.0244620, 0.0273940, 0.0305320, 0.0339490, 0.0375300, 0.0414650, 0.0471140, 0.0499960, 0.0546240, 0.0597240, 0.0651330, 0.0704360, 0.0762330, 0.0825170, 0.0920120, 0.0962660, 0.1029330, 0.1106740, 0.1192780, 0.1267200, 0.1353570, 0.1445230, 0.1594210, 0.1639370, 0.1761980, 0.1849340, 0.2010570, 0.2076280, 0.2193150, 0.2321940, 0.2533520, 0.2594000, 0.2719060, 0.2880970, 0.3120430, 0.3172790, 0.3323880, 0.3508340, 0.6736910, 0.3849520, 0.4018030, 0.4216580, 0.4556070, 0.4618290, 0.4806630, 0.5051620, 0.5413010, 0.5507500, 0.5686550, 0.5957550, 0.6373360, 0.6508080, 0.6684490, 0.7019940, 0.7436130, 0.7606270, 0.7893270, 0.8200520, 0.8635100, 0.8832950, 0.9152680, 0.9509840, 0.9963670, 1.0203640, 1.0594210, 1.1020240, 1.1761770, 1.2379940, 1.3138280, 1.3817370, 1.4496770, 1.5412160, 1.6255780, 1.7064800, 1.7726240, 1.8551920, 1.9410470, 1.9971540, 2.0444050, 2.1315170, 2.2056170, 2.2704580, 2.3273980, 2.4134090, 2.4957800, 2.5726700, 2.6121810, 2.7223990, 2.8081420, 2.8855770, 2.9467360, 3.0535060, 3.1422820, 3.2288520, 3.2761470, 3.4095730, 3.5100990, 3.5958210, 3.6626690, 3.7920460]
op_double = [0.0000040, 0.0000080, 0.0000270, 0.0000770, 0.0001720, 0.0003270, 0.0005580, 0.0008480, 0.0003840, 0.0005420, 0.0007400, 0.0010140, 0.0012810, 0.0015680, 0.0019420, 0.0023900, 0.0028910, 0.0035020, 0.0041070, 0.0048230, 0.0056230, 0.0065020, 0.0074680, 0.0085250, 0.0096760, 0.0109310, 0.0123080, 0.0138130, 0.0153300, 0.0170800, 0.0188370, 0.0207950, 0.0228450, 0.0251050, 0.0275160, 0.0298620, 0.0325320, 0.0352890, 0.0382010, 0.0413150, 0.0445420, 0.0479820, 0.0515870, 0.0552980, 0.0592840, 0.0634390, 0.0677540, 0.0723220, 0.0768230, 0.0817460, 0.0869100, 0.0921320, 0.0977590, 0.1033920, 0.1092970, 0.1154510, 0.1218490, 0.1285110, 0.1353940, 0.1427150, 0.1499960, 0.1577660, 0.1653310, 0.1751310, 0.1818210, 0.1906310, 0.1995420, 0.2091110, 0.2190300, 0.2290380, 0.2386150, 0.2492100, 0.2607750, 0.2718880, 0.2826300, 0.2953340, 0.3074240, 0.3191490, 0.3319120, 0.3439800, 0.3572740, 0.3709820, 0.3852180, 0.3997130, 0.4141320, 0.4295210, 0.4457170, 0.4620830, 0.4789860, 0.4962320, 0.5154380, 0.5318070, 0.5503600, 0.5687360, 0.5875780, 0.6076250, 0.6270820, 0.6475240, 0.6682670, 0.6896040, 0.7133600, 0.7352040, 0.7575850, 0.7812250, 0.8082530, 0.8276880, 0.8507900, 0.8774830, 0.9010280, 0.9261200, 0.9519290, 0.9795030, 1.0060260, 1.0332530, 1.0612710, 1.0893740, 1.1185750, 1.1601960, 1.1784690, 1.2079920, 1.2377260, 1.2695810, 1.3008420, 1.3332460, 1.3660450, 1.3994660]

print(len(x), len(un_float), len(op_float))
print(len(x), len(un_double), len(op_double))

plt.figure(figsize=(20, 10))

plt.plot(x, un_float, 'ro')
plt.plot(x, op_float, 'bo')
	
plt.title('Loop Vs. SIMD (Single Precision)')
plt.xlabel('Matrix Dimension')
#plt.ylabel('Time in Seconds')

plt.tick_params(axis='y', which='both', labelleft='off', labelright='on')
plt.savefig("single_precision.png")
plt.show()